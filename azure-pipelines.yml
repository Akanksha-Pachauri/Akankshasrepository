# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: build
  jobs:
  - job: job1
    steps:
    - bash: echo first build function !!
    - bash: echo $(pipelinelevelvariable)
    - bash: echo $(build.buildNumber)
    - bash: echo $(build.buildID)
    - bash: echo $(build.SourceBranchName)
    - bash: echo $(build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
 
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(build.ArtifactStagingDirectory) 

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

  - job: job2
    steps:
    - bash: echo second build function !!
- stage: devdeploy
  variables:
    environment: Dev
  dependsOn: build
  jobs:
  - job: devjob1
    steps:
    - bash: echo dev environment
  - job: devjob2
    steps:
    - bash: echo job2$(environment)environment
- stage: QAdeploy
  variables:
    environment: Dev
  dependsOn: build
  jobs:
  - job: QAjob
    steps: 
    - bash : echo $(environment)QAenvironment
- stage: prodenvironment
  variables:
    environment: prod
  dependsOn: 
  - devdeploy
  - QAdeploy
  jobs:
  - job: prodenvironment
    steps:
    - bash : echo $(environment)environment

